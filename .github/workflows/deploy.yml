name: Build, Test and Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and Test with Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get upgrade -y
          sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
          sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
          sudo apt-get update
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io
          sudo curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | grep -oP '"tag_name": "\K(.*)(?=")')/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          sudo apt-get install -y docker.io docker-compose
          sudo docker-compose -f docker-compose.yml build
          sudo docker-compose -f docker-compose.yml up -d
      - name: Tear down
        run: docker-compose -f docker-compose.yml down

  test:
    runs-on: ubuntu-latest
    needs: 
      - build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and Test with Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker.io docker-compose
          sudo docker-compose -f docker-compose.yml build
          sudo docker-compose -f docker-compose.yml up -d
          sudo docker-compose -f docker-compose.yml run flask-app pytest
      - name: Tear down
        run: docker-compose -f docker-compose.yml down

  deploy:
    runs-on: ubuntu-latest
    needs: 
      - test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Transfer Files to Server
        uses: appleboy/scp-action@v0.1.0
        with:
          host: ${{ secrets.HOSTING_SERVER }}
          username: ${{ secrets.HOSTING_NAME }}
          password: ${{ secrets.HOSTING_PASSWORD }}
          source: "flask-app-cicd/*"
          target: "/myPath"

      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOSTING_SERVER }}
          username: ${{ secrets.HOSTING_NAME }}
          password: ${{ secrets.HOSTING_PASSWORD }}

      - name: Install dependencies
        with:
          script: |
            echo sudo apt-get update
            sudo apt-get update

            echo sudo apt-get update
            sudo apt-get upgrade -y

            echo sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
            sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common

            echo curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -

            echo sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
            sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
            echo 
            echo sudo apt-get install -y docker-ce docker-ce-cli containerd.io
            sudo apt-get install -y docker-ce docker-ce-cli containerd.io

            echo  sudo curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | grep -oP '"tag_name": "\K(.*)(?=")')/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | grep -oP '"tag_name": "\K(.*)(?=")')/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            
            echo sudo chmod +x /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose

      - name: Run
        with:
          script: |
            APP_DIR="/myPath"

            cd $APP_DIR/flask-app-cicd

            docker-compose down || true
            docker-compose pull
            docker-compose up -d --build