name: Build, Test and Deploy

on:
  push:
    branches:
      - main

jobs:
  build_artifacts:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install Frontend Dependencies and Build
        working-directory: ./frontend
        run: |
          npm ci
          npm run build

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
      
      - name: Set up Rust cache
        uses: Swatinem/rust-cache@v2

      - name: Build Backend (Release)
        working-directory: ./backend
        run: cargo build --release --verbose

      - name: Upload Frontend Artifact
        uses: actions/upload-artifact@v3
        with:
          name: frontend-build
          path: frontend/

      - name: Upload Backend Artifact
        uses: actions/upload-artifact@v3
        with:
          name: backend-build
          path: backend/target/release/backend

  build_and_push_docker:
    runs-on: ubuntu-latest
    needs: build_artifacts
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download Frontend Artifact
        uses: actions/download-artifact@v3
        with:
          name: frontend-build
          path: frontend/
      
      - name: Download Backend Artifact
        uses: actions/download-artifact@v3
        with:
          name: backend-build
          path: backend/target/release/

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Frontend Docker Image
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/website:latest

      - name: Build and Push Backend Docker Image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/website-backend:latest

  deploy_to_server:
    runs-on: ubuntu-latest
    needs: build_and_push_docker
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Transfer Files to Server
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.HOSTING_SERVER }}
          username: ${{ secrets.HOSTING_NAME }}
          password: ${{ secrets.HOSTING_PASSWORD }}
          source: "./docker-compose.yml,./nginx.prod.conf,./prometheus.yml,./grafana-provisioning"
          target: "/myPath"
          strip_components: 1

      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOSTING_SERVER }}
          username: ${{ secrets.HOSTING_NAME }}
          password: ${{ secrets.HOSTING_PASSWORD }}
          script: |
            cd /myPath
            export GRAFANA_ADMIN_PASSWORD=${{ secrets.GRAFANA_ADMIN_PASSWORD }}
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
            docker-compose -f /myPath/docker-compose.yml pull
            docker-compose -f /myPath/docker-compose.yml up -d --remove-orphans
            docker system prune -af