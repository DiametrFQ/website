version: '3.8'

services:
  frontend:
    image: diametrfq/website:latest
    container_name: website_frontend
    environment:
      - RUST_BACKEND_URL=http://backend:8080
    networks:
      - app_network
    restart: unless-stopped
    depends_on:
      - backend

  backend:
    image: diametrfq/website-backend:latest
    container_name: website_backend
    environment:
      - RUST_LOG=${RUST_LOG_LEVEL:-debug,info}
      - SPOTIFY_CLIENT_ID=${SPOTIFY_CLIENT_ID}
      - SPOTIFY_CLIENT_SECRET=${SPOTIFY_CLIENT_SECRET}
      - SPOTIFY_REFRESH_TOKEN=${SPOTIFY_REFRESH_TOKEN}
    networks:
      - app_network
    restart: unless-stopped

  nginx:
    image: nginx:latest
    container_name: website_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.prod.conf:/etc/nginx/nginx.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - /var/www/certbot:/var/www/certbot:ro
    depends_on:
      - frontend
      - backend
    networks:
      - app_network
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:v2.47.2
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - app_network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:10.1.5
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana-provisioning/:/etc/grafana/provisioning/
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_ROOT_URL=https://diametrfq.ru/grafana
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
    networks:
      - app_network
    restart: unless-stopped
    depends_on:
      - prometheus
      
  node-exporter:
    image: prom/node-exporter:v1.6.1
    container_name: node_exporter
    pid: host
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - app_network
    restart: unless-stopped
    
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.2
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - app_network
    restart: unless-stopped

volumes:
  prometheus_data:
  grafana_data:
  
networks:
  app_network:
    driver: bridge